---
import { ViviendaApi } from "../../api/A2viviendasREST/apis";
import WindbnbLayout from "../../layouts/WindbnbLayout.astro";
import Map from "../../components/Map.svelte";
import Layout from "../../layouts/Layout.astro";
import cookies from "../../cookies"
import AppConfig from "../../config";
import {
  Configuration as ViviendaConfiguration,
  Vivienda,
} from "../../api/A2viviendasREST";
import { 
    EESSPrecio, 
    GasStationsApi, 
    GetGasStationsByRadiusRequest,
    Configuration as DatosAbiertosConfiguration,
} from "../../api/A2datosabiertosREST";
import Carousel from "../../components/Carousel.astro";
import {
  URI as NewBookingHandlerURI,
  FormDataKeys as NewBookingFormDataKeys,
} from "../bookings/newHandler";
const { idCasa } = Astro.params as { idCasa: string };
const viviendaApi = new ViviendaApi(
  new ViviendaConfiguration(AppConfig.viviendas)
);

let viv : Vivienda;

try{
  viv = await viviendaApi.getHouseById({ idCasa });
} catch (error){
  return Astro.redirect("/?" + new URLSearchParams({danger: "Cant find house with that ID"}));
}

const deleteHouseURI = "/houses/delete/" + idCasa;
const editHouseURI = "/houses/edit/" + idCasa;

const requestParameters: GetGasStationsByRadiusRequest = {
    latitude: parseFloat(viv?.latitude),
    longitude: parseFloat(viv?.longitude),
    limit: 50 
}

const gasStationApi = new GasStationsApi(new DatosAbiertosConfiguration(AppConfig.datosAbiertos));
let gasStationsInRadius: EESSPrecio[];
try{
   gasStationsInRadius = await gasStationApi.getGasStationsByRadius(requestParameters);
} catch (error){
  gasStationsInRadius = [];
}


const userId = Astro.cookies.get(cookies.USER_ID_KEY).value;


---

<WindbnbLayout title={viv?.title} page={"HOME"}>
  <body>
    <div class="position-relative overflow-hidden p-3 p-md-2 m-md-2 text-center bg-light">
      <div class="col-md-10 p-lg-2 mx-auto">
        <h1 class="display-6 fw-normal">{viv?.title}</h1>
        <p class="lead fw-normal">{viv?.description}</p>
        <p class="lead fw-normal">{viv?.price} euros/night.</p>
        <p class="lead fw-normal">Owner: {viv?.userId}</p>
      </div>
      {
        userId === viv?.userId && (
        <div>
                    <form action={deleteHouseURI} method="post">
                    <button class="btn btn-danger" type="submit">Delete house</button>
                    </form>

                    <form class="pt-2" action={editHouseURI} method="post">
                    <button class="btn btn-warning" type="submit">Edit house</button>
                    </form>
                  </div>
        )
      }
        
      
    </div>

    <div class="d-md-flex flex-md-equal w-100 my-md-3 ps-md-3">
      <div
        class="bg-light me-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden"
      >
        <div class="my-3 p-3">
          <h2 class="display-5">Book now!</h2>
          <p class="lead">Check the available dates.</p>
          <small class="lead">This house is {viv?.state == "available" ? "available" : "reserved"}</small>
        </div>
        <div
          class="bg-body shadow-sm mx-auto"
          style="width: 80%; height: 300px; border-radius: 21px 21px 0 0;"
        >
          <div class="text-center pt-3 mx-auto" style="width: 90%;">
            <form action={NewBookingHandlerURI} method="post">
              <input hidden value={idCasa} name={NewBookingFormDataKeys.houseId} />
              <div class="mb-3">
                <label for="fromDateInput" class="form-label">From:</label>
                <input
                  type="date"
                  name={NewBookingFormDataKeys.startDate}
                  class="form-control"
                  id="fromDateInput"
                  aria-describedby="from date input"
                />
              </div>
              <div class="mb-3">
                <label for="toDateInput" class="form-label">To:</label>
                <input
                  type="date"
                  name={NewBookingFormDataKeys.endDate}
                  class="form-control"
                  id="toDateInput"
                  aria-describedby="to date input"
                />
              </div>
              <button type="submit" class="btn btn-primary">Book</button>
            </form>
          </div>
        </div>
      </div>
      <div class="col-lg-7 col-sm-12">
        <Carousel urls={viv?.urlPhoto}/>
      </div>
    </div>
    <div class="col-12">
      <Layout title="Map">
        <p class="lead fw-normal">{viv?.location}</p>
        <Map client:load coordinates={requestParameters} gasStations={gasStationsInRadius} />
      </Layout>
    </div>
  </body>
</WindbnbLayout>
