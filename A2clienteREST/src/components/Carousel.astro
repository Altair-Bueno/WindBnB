---
export interface Props {
  urls: string[] | undefined;
}

const { urls } = Astro.props;
---

<!--

<div class="container">
    <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
    {
        urls?.map((url : string, index : number) => {
            return <div class={index === 0 ? "carousel-item active" : "carousel-item"} style="height: 500px;">
                        <img src={url} class="d-block w-100" style="height: 500px;" />
                    </div>
        })
    }
    </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

-->
<div
  id="carouselExampleControls"
  class="carousel slide"
  data-bs-ride="carousel"
>
  <div class="carousel-inner">
    {
      urls?.map((url: string, index: number) => {
        return (
          <div
            class={index === 0 ? "carousel-item active" : "carousel-item"}
            style="height: 500px;"
          >
            <img src={url} class="d-block w-100" style="height: 500px;" />
          </div>
        );
      })
    }
  </div>
  <button
    class="carousel-control-prev"
    type="button"
    data-bs-target="#carouselExampleControls"
    data-bs-slide="prev"
  >
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button
    class="carousel-control-next"
    type="button"
    data-bs-target="#carouselExampleControls"
    data-bs-slide="next"
  >
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>
